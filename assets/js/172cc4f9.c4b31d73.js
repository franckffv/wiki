"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[406],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),k=o,m=d["".concat(l,".").concat(k)]||d[k]||u[k]||a;return n?r.createElement(m,i(i({ref:t},p),{},{components:n})):r.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=k;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},402:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:1},i="Step 1: SetUp server",s={unversionedId:"tutorial-basics/step-1",id:"tutorial-basics/step-1",title:"Step 1: SetUp server",description:"Add DNS entry",source:"@site/docs/tutorial-basics/step-1.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/step-1",permalink:"/wiki/docs/tutorial-basics/step-1",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-basics/step-1.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udea6 Traefik + \ud83d\udc0b Docker Compose and Docker swarm",permalink:"/wiki/docs/category/-traefik---docker-compose-and-docker-swarm"},next:{title:"Step 2: Setting up docker swarm with traefik and portainer",permalink:"/wiki/docs/tutorial-basics/step-2"}},l={},c=[{value:"Add DNS entry",id:"add-dns-entry",level:2},{value:"Install docker and docker-compose",id:"install-docker-and-docker-compose",level:2},{value:"Set up the repository",id:"set-up-the-repository",level:2},{value:"Install Docker Engine",id:"install-docker-engine",level:2}],p={toc:c},d="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"step-1-setup-server"},"Step 1: SetUp server"),(0,o.kt)("h2",{id:"add-dns-entry"},"Add DNS entry"),(0,o.kt)("p",null,"Now you have to add a DNS entry for your newly created machine. you can fine the the IP address of the machine in the Hetzner server page."),(0,o.kt)("p",null,"We need to add A record and a CNAME record."),(0,o.kt)("p",null,"A XX.XX.XX.XX yourdomain.com\nCNAME * yourdomain.com"),(0,o.kt)("p",null,"For example this is how my sample entry looks like"),(0,o.kt)("p",null,"Record Host Value A youtube1 95.217.191.119 CNAME * youtube1.antosubash.com"),(0,o.kt)("p",null,"This might take some time to reflect so wait for a while to verify it.\nVerify DNS entry"),(0,o.kt)("p",null,"To verify dns entry we will use a tool called dig."),(0,o.kt)("p",null,"you can find it here ",(0,o.kt)("inlineCode",{parentName:"p"},"https://toolbox.googleapps.com/apps/dig/#A")),(0,o.kt)("p",null,"Make sure your domain is pointing to your ip and your subdomain is pointing to your domain"),(0,o.kt)("p",null,"yourdomain.com -> XX.XX.XX.XX subdomain.yourdomain.com -> XX.XX.XX.XX"),(0,o.kt)("p",null,"So both your domain and subdomain should point to the same IP Which is the IP of the machine we just created."),(0,o.kt)("h2",{id:"install-docker-and-docker-compose"},"Install docker and docker-compose"),(0,o.kt)("p",null,"Follow the instructions on the official website to install docker and docker-compose on your machine.\nInstall Docker Engine on Debian : ",(0,o.kt)("a",{parentName:"p",href:"https://docs.docker.com/engine/install/debian/"},"https://docs.docker.com/engine/install/debian/")),(0,o.kt)("h1",{id:"for-debian-11-in-2023"},"For debian 11 in 2023"),(0,o.kt)("p",null,"Uninstall old docker version "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt-get remove docker docker-engine docker.io containerd runc\n")),(0,o.kt)("h2",{id:"set-up-the-repository"},"Set up the repository"),(0,o.kt)("p",null,"Update the apt package index and install packages to allow apt to use a repository over HTTPS:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"}," sudo apt-get update\n\n sudo apt-get install \\\n    ca-certificates \\\n    curl \\\n    gnupg\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Add Docker\u2019s official GPG key:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"}," sudo install -m 0755 -d /etc/apt/keyrings\n\n curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg\n\n sudo chmod a+r /etc/apt/keyrings/docker.gpg\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Use the following command to set up the repository:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'    echo \\\n      "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \\\n      "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \\\n      sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\n')),(0,o.kt)("h2",{id:"install-docker-engine"},"Install Docker Engine"),(0,o.kt)("p",null,"This procedure works for Debian on x86_64 / amd64, armhf, arm64, and Raspbian."),(0,o.kt)("p",null,"Update the apt package index:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"}," sudo apt-get update\n")),(0,o.kt)("p",null,"Install Docker Engine, containerd, and Docker Compose.\nLatest\nSpecific version"),(0,o.kt)("p",null,"To install the latest version, run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"}," sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n")),(0,o.kt)("p",null,"Verify that the Docker Engine installation is successful by running the hello-world image:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"}," sudo docker run hello-world\n")),(0,o.kt)("p",null,"This command downloads a test image and runs it in a container. When the container runs, it prints a confirmation message and exits."))}u.isMDXComponent=!0}}]);